{"ast":null,"code":"var _jsxFileName = \"G:\\\\Development\\\\Project 408\\\\CSE-408---HealthBook\\\\healthbook\\\\src\\\\Pages\\\\Prescription.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrescriptionDetails = () => {\n  _s();\n  // Assuming 'finished' is a boolean value in your prescription object\n  const [finished, setFinished] = useState(prescription.finished || false);\n  const prescriptionId = '1';\n  const prescription = {\n    id: prescriptionId,\n    name: 'Sample Prescription',\n    disease: 'Common Cold',\n    date: '2022-02-10'\n    // Other prescription details...\n  };\n  const toggleFinished = () => {\n    setFinished(!finished);\n    // Here, you might want to update the state in your backend/database as well\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-4xl mx-auto p-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white shadow-md rounded-lg p-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold mb-4\",\n        children: prescription.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 12\n        }, this), \" \", prescription.date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Doctor:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 12\n        }, this), \" \", prescription.doctor]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 29\n        }, this), \" \", prescription.description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"toggleFinished\",\n        className: \"flex items-center cursor-pointer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"toggleFinished\",\n            type: \"checkbox\",\n            className: \"sr-only\",\n            checked: finished,\n            onChange: toggleFinished\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"block bg-gray-600 w-14 h-8 rounded-full\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `dot absolute left-1 top-1 bg-white w-6 h-6 rounded-full transition ${finished ? 'transform translate-x-full bg-green-500' : 'bg-gray-400'}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ml-3 text-gray-700 font-medium\",\n          children: finished ? 'Finished' : 'Not Finished'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(PrescriptionDetails, \"8xqbD4bJSFyOx95sXdGWrJB1T/o=\");\n_c = PrescriptionDetails;\nexport default PrescriptionDetails;\nvar _c;\n$RefreshReg$(_c, \"PrescriptionDetails\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PrescriptionDetails","_s","finished","setFinished","prescription","prescriptionId","id","name","disease","date","toggleFinished","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","doctor","description","htmlFor","type","checked","onChange","_c","$RefreshReg$"],"sources":["G:/Development/Project 408/CSE-408---HealthBook/healthbook/src/Pages/Prescription.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst PrescriptionDetails = () => {\r\n  // Assuming 'finished' is a boolean value in your prescription object\r\n  const [finished, setFinished] = useState(prescription.finished || false);\r\n  const prescriptionId = '1';\r\n\r\nconst prescription = {\r\n  id: prescriptionId,\r\n  name: 'Sample Prescription',\r\n  disease: 'Common Cold',\r\n  date: '2022-02-10',\r\n  // Other prescription details...\r\n};\r\n\r\n  const toggleFinished = () => {\r\n    setFinished(!finished);\r\n    // Here, you might want to update the state in your backend/database as well\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-4xl mx-auto p-5\">\r\n      <div className=\"bg-white shadow-md rounded-lg p-6\">\r\n        <h2 className=\"text-2xl font-bold mb-4\">{prescription.title}</h2>\r\n        <p><strong>Date:</strong> {prescription.date}</p>\r\n        <p><strong>Doctor:</strong> {prescription.doctor}</p>\r\n        <p className=\"mb-4\"><strong>Description:</strong> {prescription.description}</p>\r\n\r\n        <label htmlFor=\"toggleFinished\" className=\"flex items-center cursor-pointer\">\r\n          <div className=\"relative\">\r\n            <input id=\"toggleFinished\" type=\"checkbox\" className=\"sr-only\" checked={finished} onChange={toggleFinished} />\r\n            <div className=\"block bg-gray-600 w-14 h-8 rounded-full\"></div>\r\n            <div className={`dot absolute left-1 top-1 bg-white w-6 h-6 rounded-full transition ${finished ? 'transform translate-x-full bg-green-500' : 'bg-gray-400'}`}></div>\r\n          </div>\r\n          <div className=\"ml-3 text-gray-700 font-medium\">{finished ? 'Finished' : 'Not Finished'}</div>\r\n        </label>\r\n      </div>\r\n\r\n      {/* More details and components related to the prescription can go here */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrescriptionDetails;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAACO,YAAY,CAACF,QAAQ,IAAI,KAAK,CAAC;EACxE,MAAMG,cAAc,GAAG,GAAG;EAE5B,MAAMD,YAAY,GAAG;IACnBE,EAAE,EAAED,cAAc;IAClBE,IAAI,EAAE,qBAAqB;IAC3BC,OAAO,EAAE,aAAa;IACtBC,IAAI,EAAE;IACN;EACF,CAAC;EAEC,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3BP,WAAW,CAAC,CAACD,QAAQ,CAAC;IACtB;EACF,CAAC;EAED,oBACEH,OAAA;IAAKY,SAAS,EAAC,uBAAuB;IAAAC,QAAA,eACpCb,OAAA;MAAKY,SAAS,EAAC,mCAAmC;MAAAC,QAAA,gBAChDb,OAAA;QAAIY,SAAS,EAAC,yBAAyB;QAAAC,QAAA,EAAER,YAAY,CAACS;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACjElB,OAAA;QAAAa,QAAA,gBAAGb,OAAA;UAAAa,QAAA,EAAQ;QAAK;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACb,YAAY,CAACK,IAAI;MAAA;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjDlB,OAAA;QAAAa,QAAA,gBAAGb,OAAA;UAAAa,QAAA,EAAQ;QAAO;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACb,YAAY,CAACc,MAAM;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrDlB,OAAA;QAAGY,SAAS,EAAC,MAAM;QAAAC,QAAA,gBAACb,OAAA;UAAAa,QAAA,EAAQ;QAAY;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACb,YAAY,CAACe,WAAW;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAEhFlB,OAAA;QAAOqB,OAAO,EAAC,gBAAgB;QAACT,SAAS,EAAC,kCAAkC;QAAAC,QAAA,gBAC1Eb,OAAA;UAAKY,SAAS,EAAC,UAAU;UAAAC,QAAA,gBACvBb,OAAA;YAAOO,EAAE,EAAC,gBAAgB;YAACe,IAAI,EAAC,UAAU;YAACV,SAAS,EAAC,SAAS;YAACW,OAAO,EAAEpB,QAAS;YAACqB,QAAQ,EAAEb;UAAe;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC9GlB,OAAA;YAAKY,SAAS,EAAC;UAAyC;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAC/DlB,OAAA;YAAKY,SAAS,EAAG,sEAAqET,QAAQ,GAAG,yCAAyC,GAAG,aAAc;UAAE;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjK,CAAC,eACNlB,OAAA;UAAKY,SAAS,EAAC,gCAAgC;UAAAC,QAAA,EAAEV,QAAQ,GAAG,UAAU,GAAG;QAAc;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGH,CAAC;AAEV,CAAC;AAAChB,EAAA,CAvCID,mBAAmB;AAAAwB,EAAA,GAAnBxB,mBAAmB;AAyCzB,eAAeA,mBAAmB;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}